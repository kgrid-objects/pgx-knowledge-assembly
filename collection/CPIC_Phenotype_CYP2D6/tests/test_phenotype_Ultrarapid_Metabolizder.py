from cpic_phenotype_cyp2d6 import phenotype


def test_phenotype_Ultrarapid_Metabolizder():
    genotypes = [
        "*1x2/*9",
        "*1x2/*10",
        "*1x2/*10x2",
        "*1x2/*14B",
        "*1x2/*17",
        "*1x2/*29",
        "*1x2/*41",
        "*1x2/*49",
        "*1x2/*50",
        "*1x2/*54",
        "*1x2/*55",
        "*1x2/*59",
        "*1x2/*72",
        "*1x2/*84",
        "*2x2/*9",
        "*2x2/*10",
        "*2x2/*10x2",
        "*2x2/*14B",
        "*2x2/*17",
        "*2x2/*29",
        "*2x2/*41",
        "*2x2/*49",
        "*2x2/*50",
        "*2x2/*54",
        "*2x2/*55",
        "*2x2/*59",
        "*2x2/*72",
        "*2x2/*84",
        "*9/*35x2",
        "*9/*45x2",
        "*10/*35x2",
        "*10/*45x2",
        "*10x2/*35x2",
        "*10x2/*45x2",
        "*14B/*35x2",
        "*14B/*45x2",
        "*17/*35x2",
        "*17/*45x2",
        "*29/*35x2",
        "*29/*45x2",
        "*35x2/*41",
        "*35x2/*49",
        "*35x2/*50",
        "*35x2/*54",
        "*35x2/*55",
        "*35x2/*59",
        "*35x2/*72",
        "*35x2/*84",
        "*41/*45x2",
        "*45x2/*49",
        "*45x2/*50",
        "*45x2/*54",
        "*45x2/*55",
        "*45x2/*59",
        "*45x2/*72",
        "*45x2/*84",
        "*1/*1x2",
        "*1/*2x2",
        "*1/*35x2",
        "*1/*45x2",
        "*1x2/*2 ",
        "*1x2/*9x2",
        "*1x2/*17x2",
        "*1x2/*27",
        "*1x2/*29x2",
        "*1x2/*33",
        "*1x2/*34",
        "*1x2/*35",
        "*1x2/*39",
        "*1x2/*41x2",
        "*1x2/*45",
        "*1x2/*46",
        "*1x2/*48",
        "*1x2/*53",
        "*2/*2x2",
        "*2/*35x2",
        "*2/*45x2",
        "*2x2/*9x2",
        "*2x2/*17x2",
        "*2x2/*27",
        "*2x2/*29x2",
        "*2x2/*33",
        "*2x2/*34",
        "*2x2/*35",
        "*2x2/*39",
        "*2x2/*41x2",
        "*2x2/*45",
        "*2x2/*46",
        "*2x2/*48",
        "*2x2/*53",
        "*9x2/*35x2",
        "*9x2/*45x2",
        "*17x2/*35x2",
        "*17x2/*45x2",
        "*27/*35x2",
        "*27/*45x2",
        "*29x2/*35x2",
        "*29x2/*45x2",
        "*33/*35x2",
        "*33/*45x2",
        "*34/*35x2",
        "*34/*45x2",
        "*35/*35x2",
        "*35/*45x2",
        "*35x2/*39",
        "*35x2/*41x2",
        "*35x2/*45",
        "*35x2/*46",
        "*35x2/*48",
        "*35x2/*53",
        "*39/*45x2",
        "*41x2/*45x2",
        "*45/*45x2",
        "*45x2/*46",
        "*45x2/*48",
        "*45x2/*53",
        "*1x2/*1x2",
        "*1x2/*2x2",
        "*1x2/*35x2",
        "*1x2/*45x2",
        "*2x2/*2x2",
        "*2x2/*35x2",
        "*2x2/*45x2",
        "*35x2/*35x2",
        "*35x2/*45x2",
        "*45x2/*45x2",
        "*1xN>2/*3",
        "*1xN>2/*3xN",
        "*1xN>2/*4",
        "*1xN>2/*4xN",
        "*1xN>2/*5",
        "*1xN>2/*6",
        "*1xN>2/*6xN",
        "*1xN>2/*7",
        "*1xN>2/*8",
        "*1xN>2/*11",
        "*1xN>2/*12",
        "*1xN>2/*13",
        "*1xN>2/*14A",
        "*1xN>2/*15",
        "*1xN>2/*18",
        "*1xN>2/*19",
        "*1xN>2/*20",
        "*1xN>2/*21",
        "*1xN>2/*31",
        "*1xN>2/*36",
        "*1xN>2/*36xN",
        "*1xN>2/*38",
        "*1xN>2/*40",
        "*1xN>2/*42",
        "*1xN>2/*44",
        "*1xN>2/*47",
        "*1xN>2/*51",
        "*1xN>2/*56",
        "*1xN>2/*57",
        "*1xN>2/*60",
        "*1xN>2/*62",
        "*1xN>2/*68",
        "*1xN>2/*69",
        "*1xN>2/*92",
        "*1xN>2/*96",
        "*1xN>2/*99",
        "*1xN>2/*100",
        "*1xN>2/*101",
        "*2xN>2/*3",
        "*2xN>2/*3xN",
        "*2xN>2/*4",
        "*2xN>2/*4xN",
        "*2xN>2/*5",
        "*2xN>2/*6",
        "*2xN>2/*6xN",
        "*2xN>2/*7",
        "*2xN>2/*8",
        "*2xN>2/*11",
        "*2xN>2/*12",
        "*2xN>2/*13",
        "*2xN>2/*14A",
        "*2xN>2/*15",
        "*2xN>2/*18",
        "*2xN>2/*19",
        "*2xN>2/*20",
        "*2xN>2/*21",
        "*2xN>2/*31",
        "*2xN>2/*36",
        "*2xN>2/*36xN",
        "*2xN>2/*38",
        "*2xN>2/*40",
        "*2xN>2/*42",
        "*2xN>2/*44",
        "*2xN>2/*47",
        "*2xN>2/*51",
        "*2xN>2/*56",
        "*2xN>2/*57",
        "*2xN>2/*60",
        "*2xN>2/*62",
        "*2xN>2/*68",
        "*2xN>2/*69",
        "*2xN>2/*92",
        "*2xN>2/*96",
        "*2xN>2/*99",
        "*2xN>2/*100",
        "*2xN>2/*101",
        "*3/*35xN>2",
        "*3/*45xN>2",
        "*3xN/*35xN>2",
        "*3xN/*45xN>2",
        "*4/*35xN>2",
        "*4/*45xN>2",
        "*4xN/*35xN>2",
        "*4xN/*45xN>2",
        "*5/*35xN>2",
        "*5/*45xN>2",
        "*6/*35xN>2",
        "*6/*45xN>2",
        "*6xN/*35xN>2",
        "*6xN/*45xN>2",
        "*7/*35xN>2",
        "*7/*45xN>2",
        "*8/*35xN>2",
        "*8/*45xN>2",
        "*11/*35xN>2",
        "*11/*45xN>2",
        "*12/*35xN>2",
        "*12/*45xN>2",
        "*13/*35xN>2",
        "*13/*45xN>2",
        "*14A/*35xN>2",
        "*14A/*45xN>2",
        "*15/*35xN>2",
        "*15/*45xN>2",
        "*18/*35xN>2",
        "*18/*45xN>2",
        "*19/*35xN>2",
        "*19/*45xN>2",
        "*20/*35xN>2",
        "*20/*45xN>2",
        "*21/*35xN>2",
        "*21/*45xN>2",
        "*31/*35xN>2",
        "*31/*45xN>2",
        "*35xN>2/*36",
        "*35xN>2/*36xN",
        "*35xN>2/*38",
        "*35xN>2/*40",
        "*35xN>2/*42",
        "*35xN>2/*44",
        "*35xN>2/*47",
        "*35xN>2/*51",
        "*35xN>2/*56",
        "*35xN>2/*57",
        "*35xN>2/*60",
        "*35xN>2/*62",
        "*35xN>2/*68",
        "*35xN>2/*69",
        "*35xN>2/*92",
        "*35xN>2/*96",
        "*35xN>2/*99",
        "*35xN>2/*100",
        "*35xN>2/*101",
        "*36/*45xN>2",
        "*36xN/*45xN>2",
        "*38/*45xN>2",
        "*40/*45xN>2",
        "*42/*45xN>2",
        "*44/*45xN>2",
        "*45xN>2/*47",
        "*45xN>2/*51",
        "*45xN>2/*56",
        "*45xN>2/*57",
        "*45xN>2/*60",
        "*45xN>2/*62",
        "*45xN>2/*68",
        "*45xN>2/*69",
        "*45xN>2/*92",
        "*45xN>2/*96",
        "*45xN>2/*99",
        "*45xN>2/*100",
        "*45xN>2/*101",
        "*1xN>2/*9",
        "*1xN>2/*10",
        "*1xN>2/*10x2",
        "*1xN>2/*14B",
        "*1xN>2/*17",
        "*1xN>2/*29",
        "*1xN>2/*41",
        "*1xN>2/*49",
        "*1xN>2/*50",
        "*1xN>2/*54",
        "*1xN>2/*55",
        "*1xN>2/*59",
        "*1xN>2/*72",
        "*1xN>2/*84",
        "*2xN>2/*9",
        "*2xN>2/*10",
        "*2xN>2/*10x2",
        "*2xN>2/*14B",
        "*2xN>2/*17",
        "*2xN>2/*29",
        "*2xN>2/*41",
        "*2xN>2/*49",
        "*2xN>2/*50",
        "*2xN>2/*54",
        "*2xN>2/*55",
        "*2xN>2/*59",
        "*2xN>2/*72",
        "*2xN>2/*84",
        "*9/*35xN>2",
        "*9/*45xN>2",
        "*10/*35xN>2",
        "*10/*45xN>2",
        "*10x2/*35xN>2",
        "*10x2/*45xN>2",
        "*14B/*35xN>2",
        "*14B/*45xN>2",
        "*17/*35xN>2",
        "*17/*45xN>2",
        "*29/*35xN>2",
        "*29/*45xN>2",
        "*35xN>2/*41",
        "*35xN>2/*49",
        "*35xN>2/*50",
        "*35xN>2/*54",
        "*35xN>2/*55",
        "*35xN>2/*59",
        "*35xN>2/*72",
        "*35xN>2/*84",
        "*41/*45xN>2",
        "*45xN>2/*49",
        "*45xN>2/*50",
        "*45xN>2/*54",
        "*45xN>2/*55",
        "*45xN>2/*59",
        "*45xN>2/*72",
        "*45xN>2/*84",
        "*1/*1xN>2",
        "*1/*2xN>2",
        "*1/*35xN>2",
        "*1/*45xN>2",
        "*1xN>2/*2",
        "*1xN>2/*9x2",
        "*1xN>2/*17x2",
        "*1xN>2/*27",
        "*1xN>2/*29x2",
        "*1xN>2/*33",
        "*1xN>2/*34",
        "*1xN>2/*35",
        "*1xN>2/*39",
        "*1xN>2/*41x2",
        "*1xN>2/*45",
        "*1xN>2/*46",
        "*1xN>2/*48",
        "*1xN>2/*53",
        "*2/*2xN>2",
        "*2/*35xN>2",
        "*2/*45xN>2",
        "*2xN>2/*9x2",
        "*2xN>2/*17x2",
        "*2xN>2/*27",
        "*2xN>2/*29x2",
        "*2xN>2/*33",
        "*2xN>2/*34",
        "*2xN>2/*35",
        "*2xN>2/*39",
        "*2xN>2/*45",
        "*2xN>2/*46",
        "*2xN>2/*48",
        "*2xN>2/*53",
        "*9x2/*35xN>2",
        "*9x2/*45xN>2",
        "*17x2/*35xN>2",
        "*17x2/*45xN>2",
        "*27/*35xN>2",
        "*27/*45xN>2",
        "*29x2/*35xN>2",
        "*29x2/*45xN>2",
        "*33/*35xN>2",
        "*33/*45xN>2",
        "*34/*35xN>2",
        "*34/*45xN>2",
        "*35/*35xN>2",
        "*35/*45xN>2",
        "*35xN>2/*39",
        "*35xN>2/*41x2",
        "*35xN>2/*45",
        "*35xN>2/*46",
        "*35xN>2/*48",
        "*35xN>2/*53",
        "*39/*45xN>2",
        "*41x2/*45xN>2",
        "*45/*45xN>2",
        "*45xN>2/*46",
        "*45xN>2/*48",
        "*45xN>2/*53",
        "*1x2/*1xN>2",
        "*1x2/*2xN>2",
        "*1x2/*35xN>2",
        "*1x2/*45xN>2",
        "*1xN>2/*1xN>2",
        "*1xN>2/*2x2",
        "*1xN>2/*2xN>2",
        "*1xN>2/*35x2",
        "*1xN>2/*35xN>2",
        "*1xN>2/*45x2",
        "*1xN>2/*45xN>2",
        "*2x2/*2xN>2",
        "*2x2/*35xN>2",
        "*2x2/*45xN>2",
        "*2xN>2/*35x2",
        "*2xN>2/*35xN>2",
        "*2xN>2/*45x2",
        "*2xN>2/*45xN>2",
        "*35x2/*35xN>2",
        "*35x2/*45xN>2",
        "*35xN>2/*35xN>2",
        "*35xN>2/*45x2",
        "*35xN>2/*45xN>2",
        "*45x2/*45xN>2",
        "*45xN>2/*45xN>2",
    ]
    for genotype in genotypes:
        result = phenotype({"CYP2D6": genotype})
        assert result["CYP2D6"]["phenotype"] == "Ultrarapid metabolizer"

    print("Testing `Ultrarapid Metabolizer` phenotypes.")
