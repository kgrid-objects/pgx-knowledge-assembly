from cpic_phenotype_cyp2d6 import phenotype


def test_phenotype_Intermediate_Metabolizer():
    genotypes = [
        "*3/*9",
        "*3/*10",
        "*3/*10x2",
        "*3/*14B",
        "*3/*17",
        "*3/*29",
        "*3/*41",
        "*3/*49",
        "*3/*50",
        "*3/*54",
        "*3/*55",
        "*3/*59",
        "*3/*72",
        "*3/*84",
        "*3xN/*9",
        "*3xN/*10",
        "*3xN/*10x2",
        "*3xN/*14B",
        "*3xN/*17",
        "*3xN/*29",
        "*3xN/*41",
        "*3xN/*49",
        "*3xN/*50",
        "*3xN/*54",
        "*3xN/*55",
        "*3xN/*59",
        "*3xN/*72",
        "*3xN/*84",
        "*4/*9",
        "*4/*10",
        "*4/*10x2",
        "*4/*14B",
        "*4/*17",
        "*4/*29",
        "*4/*41",
        "*4/*49",
        "*4/*50",
        "*4/*54",
        "*4/*55",
        "*4/*59",
        "*4/*72",
        "*4/*84",
        "*4xN/*9",
        "*4xN/*10",
        "*4xN/*10x2",
        "*4xN/*14B",
        "*4xN/*17",
        "*4xN/*29",
        "*4xN/*41",
        "*4xN/*49",
        "*4xN/*50",
        "*4xN/*54",
        "*4xN/*55",
        "*4xN/*59",
        "*4xN/*72",
        "*4xN/*84",
        "*5/*9",
        "*5/*10",
        "*5/*10x2",
        "*5/*14B",
        "*5/*17",
        "*5/*29",
        "*5/*41",
        "*5/*49",
        "*5/*50",
        "*5/*54",
        "*5/*55",
        "*5/*59",
        "*5/*72",
        "*5/*84",
        "*6/*9",
        "*6/*10",
        "*6/*10x2",
        "*6/*14B",
        "*6/*17",
        "*6/*29",
        "*6/*41",
        "*6/*49",
        "*6/*50",
        "*6/*54",
        "*6/*55",
        "*6/*59",
        "*6/*72",
        "*6/*84",
        "*6xN/*9",
        "*6xN/*10",
        "*6xN/*10x2",
        "*6xN/*14B",
        "*6xN/*17",
        "*6xN/*29",
        "*6xN/*41",
        "*6xN/*49",
        "*6xN/*50",
        "*6xN/*54",
        "*6xN/*55",
        "*6xN/*59",
        "*6xN/*72",
        "*6xN/*84",
        "*7/*9",
        "*7/*10",
        "*7/*10x2",
        "*7/*14B",
        "*7/*17",
        "*7/*29",
        "*7/*41",
        "*7/*49",
        "*7/*50",
        "*7/*54",
        "*7/*55",
        "*7/*59",
        "*7/*72",
        "*7/*84",
        "*8/*9",
        "*8/*10",
        "*8/*10x2",
        "*8/*14B",
        "*8/*17",
        "*8/*29",
        "*8/*41",
        "*8/*49",
        "*8/*50",
        "*8/*54",
        "*8/*55",
        "*8/*59",
        "*8/*72",
        "*8/*84",
        "*9/*11",
        "*9/*12",
        "*9/*13",
        "*9/*14A",
        "*9/*15",
        "*9/*18",
        "*9/*19",
        "*9/*20",
        "*9/*21",
        "*9/*31",
        "*9/*36",
        "*9/*36xN",
        "*9/*38",
        "*9/*40",
        "*9/*42",
        "*9/*44",
        "*9/*47",
        "*9/*51",
        "*9/*56",
        "*9/*57",
        "*9/*60",
        "*9/*62",
        "*9/*68",
        "*9/*69",
        "*9/*92",
        "*9/*96",
        "*9/*99",
        "*9/*100",
        "*9/*101",
        "*10/*11",
        "*10/*12",
        "*10/*13",
        "*10/*14A",
        "*10/*15",
        "*10/*18",
        "*10/*19",
        "*10/*20",
        "*10/*21",
        "*10/*31",
        "*10/*36",
        "*10/*36xN",
        "*10/*38",
        "*10/*40",
        "*10/*42",
        "*10/*44",
        "*10/*47",
        "*10/*51",
        "*10/*56",
        "*10/*57",
        "*10/*60",
        "*10/*62",
        "*10/*68",
        "*10/*69",
        "*10/*92",
        "*10/*96",
        "*10/*99",
        "*10/*100",
        "*10/*101",
        "*10x2/*11",
        "*10x2/*12",
        "*10x2/*13",
        "*10x2/*14A",
        "*10x2/*15",
        "*10x2/*18",
        "*10x2/*19",
        "*10x2/*20",
        "*10x2/*21",
        "*10x2/*31",
        "*10x2/*36",
        "*10x2/*36xN",
        "*10x2/*38",
        "*10x2/*40",
        "*10x2/*42",
        "*10x2/*44",
        "*10x2/*47",
        "*10x2/*51",
        "*10x2/*56",
        "*10x2/*57",
        "*10x2/*60",
        "*10x2/*62",
        "*10x2/*68",
        "*10x2/*69",
        "*10x2/*92",
        "*10x2/*96",
        "*10x2/*99",
        "*10x2/*100",
        "*10x2/*101",
        "*11/*14B",
        "*11/*17",
        "*11/*29",
        "*11/*41",
        "*11/*49",
        "*11/*50",
        "*11/*54",
        "*11/*55",
        "*11/*59",
        "*11/*72",
        "*11/*84",
        "*12/*14B",
        "*12/*17",
        "*12/*29",
        "*12/*41",
        "*12/*49",
        "*12/*50",
        "*12/*54",
        "*12/*55",
        "*12/*59",
        "*12/*72",
        "*12/*84",
        "*13/*14B",
        "*13/*17",
        "*13/*29",
        "*13/*41",
        "*13/*49",
        "*13/*50",
        "*13/*54",
        "*13/*55",
        "*13/*59",
        "*13/*72",
        "*13/*84",
        "*14A/*14B",
        "*14A/*17",
        "*14A/*29",
        "*14A/*41",
        "*14A/*49",
        "*14A/*50",
        "*14A/*54",
        "*14A/*55",
        "*14A/*59",
        "*14A/*72",
        "*14A/*84",
        "*14B/*15",
        "*14B/*18",
        "*14B/*19",
        "*14B/*20",
        "*14B/*21",
        "*14B/*31",
        "*14B/*36",
        "*14B/*36xN",
        "*14B/*38",
        "*14B/*40",
        "*14B/*42",
        "*14B/*44",
        "*14B/*47",
        "*14B/*51",
        "*14B/*56",
        "*14B/*57",
        "*14B/*60",
        "*14B/*62",
        "*14B/*68",
        "*14B/*69",
        "*14B/*92",
        "*14B/*96",
        "*14B/*99",
        "*14B/*100",
        "*14B/*101",
        "*15/*17",
        "*15/*29",
        "*15/*41",
        "*15/*49",
        "*15/*50",
        "*15/*54",
        "*15/*55",
        "*15/*59",
        "*15/*72",
        "*15/*84",
        "*17/*18",
        "*17/*19",
        "*17/*20",
        "*17/*21",
        "*17/*31",
        "*17/*36",
        "*17/*36xN",
        "*17/*38",
        "*17/*40",
        "*17/*42",
        "*17/*44",
        "*17/*47",
        "*17/*51",
        "*17/*56",
        "*17/*57",
        "*17/*60",
        "*17/*62",
        "*17/*68",
        "*17/*69",
        "*17/*92",
        "*17/*96",
        "*17/*99",
        "*17/*100",
        "*17/*101",
        "*18/*29",
        "*18/*41",
        "*18/*49",
        "*18/*50",
        "*18/*54",
        "*18/*55",
        "*18/*59",
        "*18/*72",
        "*18/*84",
        "*19/*29",
        "*19/*41",
        "*19/*49",
        "*19/*50",
        "*19/*54",
        "*19/*55",
        "*19/*59",
        "*19/*72",
        "*19/*84",
        "*20/*29",
        "*20/*41",
        "*20/*49",
        "*20/*50",
        "*20/*54",
        "*20/*55",
        "*20/*59",
        "*20/*72",
        "*20/*84",
        "*21/*29",
        "*21/*41",
        "*21/*49",
        "*21/*50",
        "*21/*54",
        "*21/*55",
        "*21/*59",
        "*21/*72",
        "*21/*84",
        "*29/*31",
        "*29/*36",
        "*29/*36xN",
        "*29/*38",
        "*29/*40",
        "*29/*42",
        "*29/*44",
        "*29/*47",
        "*29/*51",
        "*29/*56",
        "*29/*57",
        "*29/*60",
        "*29/*62",
        "*29/*68",
        "*29/*69",
        "*29/*92",
        "*29/*96",
        "*29/*99",
        "*29/*100",
        "*29/*101",
        "*31/*41",
        "*31/*49",
        "*31/*50",
        "*31/*54",
        "*31/*55",
        "*31/*59",
        "*31/*72",
        "*31/*84",
        "*36/*41",
        "*36/*49",
        "*36/*50",
        "*36/*54",
        "*36/*55",
        "*36/*59",
        "*36/*72",
        "*36/*84",
        "*36xN/*41",
        "*36xN/*49",
        "*36xN/*50",
        "*36xN/*54",
        "*36xN/*55",
        "*36xN/*59",
        "*36xN/*72",
        "*36xN/*84",
        "*38/*41",
        "*38/*49",
        "*38/*50",
        "*38/*54",
        "*38/*55",
        "*38/*59",
        "*38/*72",
        "*38/*84",
        "*40/*41",
        "*40/*49",
        "*40/*50",
        "*40/*54",
        "*40/*55",
        "*40/*59",
        "*40/*72",
        "*40/*84",
        "*41/*42",
        "*41/*44",
        "*41/*47",
        "*41/*51",
        "*41/*56",
        "*41/*57",
        "*41/*60",
        "*41/*62",
        "*41/*68",
        "*41/*69",
        "*41/*92",
        "*41/*96",
        "*41/*99",
        "*41/*100",
        "*41/*101",
        "*42/*49",
        "*42/*50",
        "*42/*54",
        "*42/*55",
        "*42/*59",
        "*42/*72",
        "*42/*84",
        "*44/*49",
        "*44/*50",
        "*44/*54",
        "*44/*55",
        "*44/*59",
        "*44/*72",
        "*44/*84",
        "*47/*49",
        "*47/*50",
        "*47/*54",
        "*47/*55",
        "*47/*59",
        "*47/*72",
        "*47/*84",
        "*49/*51",
        "*49/*56",
        "*49/*57",
        "*49/*60",
        "*49/*62",
        "*49/*68",
        "*49/*69",
        "*49/*92",
        "*49/*96",
        "*49/*99",
        "*49/*100",
        "*49/*101",
        "*50/*51",
        "*50/*56",
        "*50/*57",
        "*50/*60",
        "*50/*62",
        "*50/*68",
        "*50/*69",
        "*50/*92",
        "*50/*96",
        "*50/*99",
        "*50/*100",
        "*50/*101",
        "*51/*54",
        "*51/*55",
        "*51/*59",
        "*51/*72",
        "*51/*84",
        "*54/*56",
        "*54/*57",
        "*54/*60",
        "*54/*62",
        "*54/*68",
        "*54/*69",
        "*54/*92",
        "*54/*96",
        "*54/*99",
        "*54/*100",
        "*54/*101",
        "*55/*56",
        "*55/*57",
        "*55/*60",
        "*55/*62",
        "*55/*68",
        "*55/*69",
        "*55/*92",
        "*55/*96",
        "*55/*99",
        "*55/*100",
        "*55/*101",
        "*56/*59",
        "*56/*72",
        "*56/*84",
        "*57/*59",
        "*57/*72",
        "*57/*84",
        "*59/*60",
        "*59/*62",
        "*59/*68",
        "*59/*69",
        "*59/*92",
        "*59/*96",
        "*59/*99",
        "*59/*100",
        "*59/*101",
        "*60/*72",
        "*60/*84",
        "*62/*72",
        "*62/*84",
        "*68/*72",
        "*68/*84",
        "*69/*72",
        "*69/*84",
        "*72/*92",
        "*72/*96",
        "*72/*99",
        "*72/*100",
        "*72/*101",
        "*84/*92",
        "*84/*96",
        "*84/*99",
        "*84/*100",
        "*84/*101",
    ]
    for genotype in genotypes:
        result = phenotype({"CYP2D6": genotype})
        assert result["CYP2D6"]["phenotype"] == "Intermediate metabolizer"

    print("Testing `Intermediate Metabolizer` phenotypes.")
